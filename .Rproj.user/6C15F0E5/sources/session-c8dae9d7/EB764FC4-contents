---
title: "mtcars_basic"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

A frequent problem occurs when trying to access columns inside a data.frame.

```{r}
head(mtcars)

mtcars[1:5, c("hp")]
mtcars[1:5, hp]
```

But using just col name fails.
```{r}
mtcars[1:5, hp]
```

The reason as explained in many places, such as r4ds ....., is mtcars exisits in the environment, but not hp.

```{r}
hp
```

Again this is explained in many places, along with several ways to `fix`
```{r}
with(mtcars, hp)
```
Of course, R's help also explains this but you must be comfortable with terms like `environment` , `expression` and `parent` and what `constructing an environment` with `data` means.
```{r}
?with
```


Here is my own take.   It is same as above, but I find this way clearer.

Let's check the available variables in the the environment.
```{r}
ls()
search()
```

Environments, which I think of hierarchy of containers holding R objects.   The one we usually work in is ".GlobalEnv", the next one depends on which package was most recently added and will differ.

```{r}
ls(globalenv())

```


For our purposes, note there is no `hp`
```{r}
ls(base)
ls("package:base")
?ls

j
?data
# This puts data in globalenv()
data(mtcars)
ls()
rm(mtcars)
ls()
mtcars[1:5, ]
ls()

```

