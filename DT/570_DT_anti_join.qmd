
  NOTE:  Example taken from updating R packages, where .libPaths()[[2]] is read-only

###  Create toy example
When I update my R packgaes, I have a twist because my site directory is
read-only.  In a separate post, I will show how I navigate this without opening the permissions. 
This toy example illustrates how I use anti-join to accomplish this.


The toy example simplifies what `installed.packages()` and `old.packages()`

- inst1 
- inst2
- cand

<!--
###  Prepare toy example of what `installed.packages` reports:
-->

```{r}
#| include: false
#| eval: false

library(data.table)
(dt = data.table(x=(LETTERS[1:4]),
       y= c(rep(1,4))
       ))
#   add 4 packages in 2
(dt = rbind(dt, data.table(x = LETTERS[5:8],y= c(rep(2,4))) ))
(dt= rbind(dt, data.table(x=c("E","H"), y=c(1,1))))
setorder(dt)
dput(dt)
#     x y
#  1: A 1
#  2: B 1
#  3: C 1
#  4: D 1
#  5: E 2
#  6: F 2
#  7: G 2
#  8: H 2
#  9: E 1
# 10: H 1
```



<!--
### Prepare Candidates  or old.packages for toy examples
-->

```{r}
#| include: false
#| eval: true
s = "x, y
A, 1
B, 1
E, 1 
F, 2
E, 2
H, 2"
cand = data.table::fread(s)
dput(cand)
# structure(list(x = c("A", "B", "E", "F", "E", "H"), y = c(1L, 
# 1L, 1L, 2L, 2L, 2L)), row.names = c(NA, -6L), class = c("data.table", 
# "data.frame"), .internal.selfref = <pointer: 0x55578dd18740>)
#    x y
# 1: A 1
# 2: B 1
# 3: E 1
# 4: F 2
# 5: E 2
# 6: H 2
```

### installed packages for toy example:
```{r}
dt  <- structure(
      list(x = c("A", "B", "C", "D", "E", "F", "G", "H", "E", "H"), 
           y = c(1, 1, 1, 1, 2, 2, 2, 2, 1, 1)), 
      row.names = c(NA, -10L), 
      class = c("data.table", "data.frame")
      )
setorder(dt)[]
```

### Examine install packages
```{r}

```
### Candidate, or old.packages(), for upgrade
```{r}

cand  <-  structure(list(x = c("A", "B", "E", "F", "E", "H"), y = c(1L, 1L, 1L, 2L, 2L, 2L)), row.names = c(NA, -6L), class = c("data.table", "data.frame"))

cand
```

### Examine candidate packages
```{r}

```


### Match candidaes and installed
```{r}
#| eval: false
#| include: false

cand1 = cand[y== 1,]

### not all of these are true upgrades
cand2 = cand[y == 2, ]
```
### Update process
If the candidates are in directory 1, we can update these as is.
Case 1 
```{r}
cand[y==1, ] 

If the candidates are in directory 2, there are a few cases.
The time is     now.

  Case 2A
  If the candidate is also a candidate in 1 then case 1 will handle and nothing more to be done.
  cand[y==1,][cand [y == 2, ], on = .(x), nomatch=NULL]

Case 2B
# If the candidate is not a now candidate in 1 but was previously installed in  1 (ie past upgrade)
# false positive, ignore
cand[y == 2] [!cand[y ==1],  on=.(x)][dt[y == 1,], on = .(x), nomatch=NULL]

Case 2C
# If candidate never install in 1, upgrade
cand[y ==2, ][!dt[y == 1, ], on=.(x)]

```
```{r}
#| include: false
knitr::knit_exit()
```

### LEGACY
```{r}
library(data.table)

dt1 <- data.table(A1=letters[1:10], B1=sample(1:5,10, replace=TRUE))
dt2 <- data.table(A2=letters[c(1:5, 11:15)], B2=sample(1:5,10, replace=TRUE))

setkey(dt1, A1)
setkey(dt2, A2)
dt1
#     A1 B1
#  1:  a  4
#  2:  b  1
#  3:  c  3
#  4:  d  1
#  5:  e  3
#  6:  f  4
#  7:  g  3
#  8:  h  5
#  9:  i  1
# 10:  j  3

dt2
#     A2 B2
#  1:  a  3
#  2:  b  5
#  3:  c  2
#  4:  d  4
#  5:  e  3
#  6:  k  4
#  7:  l  4
#  8:  m  5
#  9:  n  4
# 10:  o  5

```
```{r}

`A new "!" prefix on i signals 'not-join' (a.k.a. 'not-where'), #1384.
DT[-DT["a", which=TRUE, nomatch=0]]   # old not-join idiom, still works
DT[!"a"]                              # same result, now preferred.
DT[!J(6),...]                         # !J == not-join
DT[!2:3,...]                          # ! on all types of i
DT[colA!=6L | colB!=23L,...]          # multiple vector scanning approach
DT[!J(6L,23L)]                        # same result, faster binary search
'!' has been used rather than '-' :
* to match the 'not-join' and 'not-where' nomenclature
* with '-', DT[-0] would return DT rather than DT[0] and not be backwards
compatibile. With '!', DT[!0] returns DT both before (since !0 is TRUE in
base R) and after this new feature.
* to leave DT[+...] and DT[-...] available for future use``
```
