## file <- "144_dcast_.R "
## long to wide, dcast
```{r}


library(data.table)
DT <- data.table(v1 = c(1.1, 1.1, 1.1, 2.2, 2.2, 2.2),
                 v2 = factor(c(1L, 1L, 1L, 3L, 3L, 3L), levels=1:3),
                 v3 = factor(c(2L, 3L, 5L, 1L, 2L, 6L), levels=1:6),
                 v4 = c(3L, 2L, 2L, 5L, 4L, 3L)
)

DT
long=DT

## key fields c(1,2)  v1+v2
## field v3 holds future column headings
## field v4 holds future values, for each future columnn heading
wide=dcast(long, v1+v2~v3, value.var='v4')             
```


### read string to dt

<!-- {{{ -->

```{r}
s1 <- "family_id age_mother dob_child1 dob_child2 dob_child3
1         30 1998-11-26 2000-01-29         NA
2         27 1996-06-22         NA         NA
3         26 2002-07-11 2004-04-05 2007-09-02
4         32 2004-10-10 2009-08-27 2012-07-21
5         29 2000-12-05 2005-02-28         NA"

DT <- fread(s1)
DT
#    family_id age_mother dob_child1 dob_child2 dob_child3
#        <int>      <int>     <IDat>     <IDat>     <IDat>
# 1:         1         30 1998-11-26 2000-01-29       <NA>
# 2:         2         27 1996-06-22       <NA>       <NA>
# 3:         3         26 2002-07-11 2004-04-05 2007-09-02
# 4:         4         32 2004-10-10 2009-08-27 2012-07-21
# 5:         5         29 2000-12-05 2005-02-28       <NA>
## dob stands for date of birth.

str(DT)
# Classes 'data.table' and 'data.frame':    5 obs. of  5 variables:
#  $ family_id : int  1 2 3 4 5
#  $ age_mother: int  30 27 26 32 29
#  $ dob_child1: IDate, format: "1998-11-26" "1996-06-22" "2002-07-11" ...
#  $ dob_child2: IDate, format: "2000-01-29" NA "2004-04-05" ...
#  $ dob_child3: IDate, format: NA NA "2007-09-02" ...
#  - attr(*, ".internal.selfref")=<externalptr>
```<!-- }}} -->

### melt: wide to long 
```{r}
DT.m1 = melt(DT, id.vars = c("family_id", "age_mother"),
                measure.vars = c("dob_child1", "dob_child2", "dob_child3"))
DT.m1

DT.m2 = melt(DT, id.vars = 1:2,
        measure.vars = 3:5,
        variable.name = "variable",
        variable.value = "value")
DT.m2

identical(DT.m1, DT.m2) # [1] TRUE
```

### dcast: long to wide
```{r}
dcast(DT.m1, family_id + age_mother ~ variable, value.var = "value")
```

```{r}
test = data.table(pkg=c("x", "y", "z"),
                  dir1 = c(T,T,F),
                  dir2 = c(T,F,T)
)
test


# melt
test = melt(test, id.vars="pkg", measure.var = c("dir1", "dir2"))
test

# widen to orginal
dcast(test, pkg ~ variable, value.var = "value")
)
```
## Example, so: https://bityl.co/KUeH  given
```{r}
library(data.table)
(df <- data.frame(month=rep(1:3,2),
                 student=rep(c("Amy", "Bob"), each=3),
                 A=c(9, 7, 6, 8, 6, 9),
                 B=c(6, 7, 8, 5, 6, 7)))

#key: month, student
#student: categorical

# widen
?data.table
?dcast
data.table::dcast(setDT(df), month ~ student, value.var = c("A", "B"))
data.table::dcast(setDT(df), month ~ student, value.var = c("A", "B"), sep=".")

```
### Example
```{r}
set.seed(1)
(df <- data.frame(dive = factor(sample(c("dive1","dive2"), 10, replace=TRUE)),
                 speed = runif(10)
                 )
)
```
### widen, using new "index" variable
```{r}
dt  <- setDT(df)
rownames(dt)
dt = dt[, .(numb = as.numeric(rownames(dt)), dive, speed)]
dcast(dt, numb ~ dive, value.var = "speed")[order(numb)]
dcast(dt, numb ~ dive, value.var = "speed")
```
### Example:
```{r}
(     DT = data.table(x=c(20,10,10,30,30,20), y=c("a", "a", "a", "b", "b", "b"), z=1:6))
     
#    groups on $x
     rowid(DT$x) # 1,1,2,1,2,2
     rowidv(DT, cols="x") # same as above
     
     rowid(DT$x, prefix="group") # prefixed with 'group' (group1, group2, ...)
     
     rowid(DT$x, DT$y) # 1,1,2,1,2,1
     rowidv(DT, cols=c("x","y")) # same as above
DT
     DT[, .(N=seq_len(.N)), by=.(x,y)]$N # same as above
     DT[, .(N=seq_len(.N)), by=.(x,y)]   # index is effectively .(x,y)
     
     # convenient usage with dcast
     dcast(DT, x ~ rowid(x, prefix="group"), value.var="z")



```
