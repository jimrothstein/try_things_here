--
tifle: "`r knitr::current_input()`"
date: "`r paste('last updated', 
    format(lubridate::now(), ' %d %B %Y'))`"
output:   
  html_document:  
        code_folding: show
        toc: true 
        toc_depth: 2
        toc_float: true
  pdf_document:   
    latex_engine: xelatex  
    toc: true
    toc_depth:  2   
fontsize: 11pt   
geometry: margin=0.5in,top=0.25in   
TAGS:  Rscripts, update
---

 ---------------------------------------- PURPOSE -------------------------------------------
-   Collect functions to manage updates, 3rd party updates, library locations, etc.
-   Polished, daily version? put into  Rscripts in jimTools
-   DEEPER PROBE? SEE 100..104            
# -----------------------------------------------------------------------------------
https://stackoverflow.com/questions/4090169/elegant-way-to-check-for-missing-packages-and-install-them

SEE ALSO:
-   (update issues) https://github.com/ColinGoodall1/editUtilsR
SEE ALSO:  ~/code/zsh_scripts_project/071_run_R_to_update_packages.sh
SEE ALSO:  0512_system_tools.R_

TODO:
-   W-I-P, more to debug
-   Then get Rscripts version to work
-   DEEPER Version:   use 088A_ 

# -------------------
1.  Update old.packages
# -------------------
```{r}
knitr::knitr_quit()
update.packages(oldPkgs= old.packages())
```

### =========================
###   UPDATE  - 2 step process?
### =========================

Ask:  if directory is not writable prompt user to OK ~/R/x86_64-pc-linux-gnu-library/4.3/

*   Use checkBuilt= T to force
NOTE:    if dir not writeable, R asks to use personal directory (independent of value for `ask`)
instlib =  avoids the warning
ask = refers to each individual update
checkBuilt=T    turns a package into `old` if compiled under older R version
```{r update_old}
update.packages(ask = F,    ## TRUE means asks for each pkg
                oldPkgs = old.packages(),
                instlib = .libPaths()[[1]],       # avoids WARNING that R_HOME not writable
                checkBuilt=T)
```

```{r upgrade}
{
begin  <- Sys.time()
    update.packages(ask = FALSE , checkBuild=TRUE)
    end  <- Sys.time()
    diff  <- end - begin
    diff
}

# ---------------------------------------------
### Remove Package
# ---------------------------------------------
```{r}
if (FALSE) remove.packages("cellranger")
```


