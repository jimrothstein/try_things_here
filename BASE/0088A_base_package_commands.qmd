--
title: "`r knitr::current_input()`"
date: "`r paste('last updated', 
    format(lubridate::now(), ' %d %B %Y'))`"
output:   
  html_document:  
        code_folding: show
        toc: true 
        toc_depth: 2
        toc_float: true
  pdf_document:   
    latex_engine: xelatex  
    toc: true
    toc_depth:  2   
fontsize: 11pt   
geometry: margin=0.5in,top=0.25in   
TAGS:  RPI, rpi,Rscripts
---

This is DEEPER version of 0088_
0088 is more streamlined.
Rscripts/jim Tools - is intended for daily produciton
TODO:
-   W-I-P
-   anything NOT necessary in 0088; Doc here!
-   any in devtools?
-   find.package to find packages in TWO locations

SEE ALSO:
-   (update issues) https://github.com/ColinGoodall1/editUtilsR
SEE ALSO:  ~/code/zsh_scripts_project/071_run_R_to_update_packages.sh
SEE ALSO:  0512_system_tools.R_
https://stackoverflow.com/questions/4090169/elegant-way-to-check-for-missing-packages-and-install-them

#---------------------------------------------
Currently Installed Packages
# ---------------------------------------------
```{r}
library(dplyr)
tmp = as_tibble(installed.packages())
names(tmp)
#  [1] "Package"               "LibPath"              
#  [3] "Version"               "Priority"             
#  [5] "Depends"               "Imports"              
#  [7] "LinkingTo"             "Suggests"             
#  [9] "Enhances"              "License"              
# [11] "License_is_FOSS"       "License_restricts_use"
# [13] "OS_type"               "MD5sum"               
# [15] "NeedsCompilation"      "Built"                

p = tmp |> select(c("Package", "Version", "LibPath",  "Built"))
str(p)
```
# ---------------------------------------------
### unique paths
# ---------------------------------------------
```{r}
p |> select("LibPath")  |> count(LibPath) 
# # A tibble: 2 × 2
#   LibPath                                         n
#   <chr>                                       <int>
# 1 /home/jim/R/x86_64-pc-linux-gnu-library/4.3   157
# 2 /usr/lib/R/library                             29
```

# -----------------------------------------------------
#   /usr/lib/R/library is NOT updatable (only sudo)
#   List these packages  (29)
# -----------------------------------------------------
```{r}
p$LibPath[grepl(pattern="/usr/lib/", x=p$LibPath)]
print(dplyr::filter(p, LibPath == "/usr/lib/R/library") ,
    n=29)
```


# ---------------------------------------------
## ENV variables
# ---------------------------------------------
*  See: https://stat.ethz.ch/R-manual/R-devel/library/base/html/EnvVar.html
# /usr/lib/R
```{r}
(r_home <-R.home(component="home")) # [1] "/usr/lib/R"
Sys.getenv("R_HOME") 			# /usr/lib/R ; where R installed
Sys.getenv("R_LIBS_USER") # # [1] "/home/jim/R/x86_64-pc-linux-gnu-library/4.3"
Sys.getenv("R_HIST_SIZE") # [1] ""
Sys.getenv("R_BROWSER")  # [1] "xdg-open"
# ---------------------------------------------
length(Sys.getenv()) # 132

# too lengthy
if  (FALSE) Sys.getenv()		
```

# ---------------------------------------------
### Package Versions
# ---------------------------------------------
```{r}
packageVersion("rmarkdown") # 3.5.1
packageVersion("MASS")      # 7.3.60
packageVersion("class")      # 7.3.22:
R.version.string     # [1] "R version 4.3.0 (2023-04-21)"
```

# ---------------------------------------------
Dependncies
TODO:   utils::depends(pkg =  c(), dependencies=c ())
# ---------------------------------------------
```{r}
# For each installed pkg, find its dependencies
#### return list of character vectors, ~15,293 
	
l <- tools::package_dependencies(
							"tibble",
							db=installed.packages(),
							reverse=TRUE	)
l

# And "tibble" is dependenat upon:
l <- tools::package_dependencies("tibble", reverse=FALSE)
str(l) # named list, 1 elemnt named tibble,  a chr[12]
l

t  <- tibble(pkg=l$tibble)
t
##### 010-for <pkg>, find packages dependent upon it
```

# ------------------------------------------------------------
###	PROBLEM:  R pkgs   - can be in TWO locations !!!	
# ------------------------------------------------------------
```{r}
ip = as_tibble(installed.packages(lib.loc=NULL))   # NULL, searches all paths
ip = ip |> dplyr::select("Package","LibPath", "Version", "Built") 
ip
##	Look !  MASS installed in two locations
ip |> dplyr::filter(Package==("MASS")) 
ip |> dplyr::filter(Package==("KernSmooth")) 

##	only 
ip |> dplyr::filter(Package==("dplyr") )
 

##	Where is MASS
m = installed.packages(lib.loc=NULL)
m
```
#   2nd way to find directories for ONE pkg  
```{r}

#    SEE ?find.pacakge()
     findPkgAll <- function(pkg)
       unlist(lapply(.libPaths(), function(lib)
                find.package(pkg, lib, quiet=TRUE, verbose=FALSE)))
     
     findPkgAll("MASS")
     findPkgAll("knitr")
```

#   Bug in find.package?

```{r}
#   MASS is in 2 directories
#   But .. 
    find.package("MASS")
    find.package("MASS", lib.loc=NULL)

    # must use verbose=T, to get 
    x = find.package("MASS", verbose=T)

Warning message:
In find.package("MASS", verbose = T) :
  package ‘MASS’ found more than once, using the first from
  “/home/jim/R/x86_64-pc-linux-gnu-library/4.3/MASS”,
  “/usr/lib/R/library/MASS”
  
```

# ---------------------------------------------
### Remove Package
# ---------------------------------------------
```{r}
if (FALSE) remove.packages("cellranger")
```


# ---------------------------------------------
### LEGACY
# ---------------------------------------------
### Loads,  but does not attach; TRUE if able to load.
```{r}
check_suggests <- function(package) {
  if (!requireNamespace(package, quietly = TRUE)) {
    #stop("Suggested package '{package}' not present.")
    stop("Not found")
  }
}
check_suggests("tibble")
check_suggests("joke")
check_suggests("glue")
check_suggests("ggplot2")
```


# ----  003 view all installed R packages? ----
# at cmd line  which needed?
# apt-get cache search "^r-*" | sort


```
#### 4-.libPaths(), list all paths, purpose, name
```{r}


.libPaths()
# fix:

# t_libPaths <- tibble(.libPaths()) %>% 
#   mutate(
#   purpose =  c("added packages", 
#                ".Library.site", 
#                ".Library.site", 
#                "base R pkgs"),  
# 
#   quantity  = c("many", "Empty", "Empty", "many")  ,
#   env_var = c("R_LIBS_USER","","","R_LIBS?"),
#   aka = c("",".Library.site", ".Library.site", ".Library.site, .Library"))
# 
# t_libPaths

## Each path in .libPaths(), list installed packages

.Library
if (FALSE)
  .Library
  lapply(.libPaths(), list.dirs, recursive=FALSE)

getOption("repos")  # cran.rstudio.com
```

# -----------------------------jennyBC ------------------------------------------------------------------
##### 013_jennyBC
####  from https://github.com/smithjd/explore-libraries/blob/master/01_explore-libraries_jenny.R
```{r}

ipt <- installed.packages() %>%
  as_tibble()

dim(ipt) # [1] 186  16

installed_pkgs  <- ipt %>% select("Package")

print(installed_pkgs, n=200)

ipt %>% glimpse()

####' 014_Exploring the packages

####   * tabulate by LibPath, Priority, or both
#### base: 14, recommended:15, my library:165
ipt %>%
  count(LibPath, Priority)

####   * what proportion need compilation?
####   2nd line produces 3 rows x 2 (NeedCompliation n)
ipt %>%
  count(NeedsCompilation) %>%
  mutate(prop = n / sum(n))

#### 015_remove pkg
# uninstall()  vs remove.packages() ??
#### Find (and remove) package BH (it is gone!)
ipt %>% filter(Package=="BH") 

uninstall(BH)
```


