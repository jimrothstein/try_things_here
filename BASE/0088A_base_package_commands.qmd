-hide--
title: " update_packages.qmd "  
author: "JR"  
date: "5/22/2021"  
pdf-engine: lualatex  
format:   
  html:  
        code-fold: true
        toc: true 
        toc_depth: 3
        toc_float: true
        embed-resources:  true
        indent: true
execute:
    error: true 
    warning: true
    collapse: true 
    standalone: true
TAGS:  RPI, rpi,Rscripts
---

This is DEEPER version of 0088_
0088 is more streamlined.
Rscripts/jim Tools - is intended for daily produciton

PURPOSE:    Update R packages

Outline:  

    -   Check R version, sessionInfo
    -   Check current R library locations, 
    -   Review packages each library
    -   Identify packages in more than ONE directory
    -   (interactive only) update `old` packages (compiled with older R versions)
    -   (interactive only) update any remaining packages
    -   list Env variables
    
Functions:  

    -   update
    -   upgrade
    -   installed.packages
    -   find.package


8JULY2023   -   ran, step 2:   warns about Matrix (yes- in to places)  (R v 4.3.1)
14JULY2023  -   ran, step 2:   warns 'KernSmooth', 'Matrix', 'mgcv' - all in /opt/R/4.3.1/lib/R/library will not be updated 


TODO:  

    *    W-I-P
    *    Which chunks interactive?  
    *    anything NOT necessary in 0088; Doc here!
    *   any in devtools?
    *   find.package to find packages in TWO locations

SEE ALSO:
-   (update issues) https://github.com/ColinGoodall1/editUtilsR

SEE ALSO:  ~/code/zsh_scripts_project/071_run_R_to_update_packages.sh

SEE ALSO:  0512_system_tools.R_
https://stackoverflow.com/questions/4090169/elegant-way-to-check-for-missing-packages-and-install-them


R version
```{r}
suppressMessages(library(dplyr))

    version
#   loaded now
sessionInfo()
getOption("repos")  # cran.rstudio.com
```

###     Review libPaths and package dir under each path
```{r}
.libPaths()                            # all libraries
.Library                               # system library 
```

***
 -------------------------------------
### Gather Currently Installed Packages
 -------------------------------------
```{r}
tmp = as_tibble(installed.packages())
p = tmp |> dplyr::select(c("Package", "Version", "LibPath",  "Built"))
nrow(p)
```
 -------------------------
###     Show # unique packages in each  path
 -------------------------

```{r}

p |> select("LibPath")  |> dplyr::count(LibPath) 

# # A tibble: 2 × 2
#   LibPath                                         n
#   <chr>                                       <int>
# 1 /home/jim/R/x86_64-pc-linux-gnu-library/4.3   157
# 2 /opt/R/4.3.1/lib/R/library                     29 (eff 23JUNE 2023)
# 2 /usr/lib/R/library                             29 (deprecated)
```
-----------------------------------------------------
### List Packages in /opt/R/4.3.1/lib/R/library, which is NOT updatable (only sudo can)
-----------------------------------------------------

```{r eval=F}

.libPaths()
# [1] "/home/jim/R/x86_64-pc-linux-gnu-library/4.3"
# [2] "/opt/R/4.3.1/lib/R/library"                 
print(dplyr::filter(p, LibPath == "/opt/R/4.3.1/lib/R/library") , n=29)

print(dplyr::filter(p, LibPath == "/usr/lib/R/library") ,
    n=29)

##  Each library path, list packages dirs 
## lengthy
if ( interactive()) lapply(.libPaths(), list.dirs, recursive=FALSE)
```
# ------------------------------------------------------------
###	Indentify packages located in TWO directories:  
PROBLEM:  R pkgs   - can be in TWO locations !!!	
# ------------------------------------------------------------

```{r,   eval=F}
ip = as_tibble(installed.packages(lib.loc=NULL))   # NULL, searches all paths
ip = ip |> dplyr::select("Package","LibPath", "Version", "Built") 
ip
##	Look !  MASS installed in two locations
ip |> dplyr::filter(Package==("MASS")) 
ip |> dplyr::filter(Package==("KernSmooth")) 
ip |> dplyr::filter(Package==("Matrix")) 

##	only one
ip |> dplyr::filter(Package==("dplyr") )
```

 ---------------------------------------------
###   2nd way to find directories for ONE pkg  
 ---------------------------------------------
```{r, eval=F}
#    SEE ?find.pacakge()
     findPkgAll <- function(pkg)
       unlist(lapply(.libPaths(), function(lib)
                find.package(pkg, lib, quiet=TRUE, verbose=FALSE)))
     
     findPkgAll("MASS")
     findPkgAll("knitr")
     findPkgAll("Matrix")
     findPkgAll("mgcv")
     findPkgAll("KernSmooth")
```

#   Bug in find.package?  Should be 2 directoris, finds only 1
```{r, eval=F}
#   MASS is in 2 directories
#   But .. 
    find.package("MASS")
    find.package("MASS", lib.loc=NULL)

    # must use verbose=T, to get 
    find.package("MASS", verbose=T)
    find.package("KernSmooth", verbose=T, lib.loc=NULL)

# Warning message:                       # 
# In find.package("MASS", verbose = T) :
#   package ‘MASS’ found more than once, using the first from
#   “/home/jim/R/x86_64-pc-linux-gnu-library/4.3/MASS”,
#   “/usr/lib/R/library/MASS”
```

### =========================
###   UPDATE  - 2 step process?
### =========================

Ask:  if directory is not writable prompt user to OK ~/R/x86_64-pc-linux-gnu-library/4.3/

# -----------------------------------------------------------------
NOTE:    if dir not writeable: 
R asks to use personal directory (independent of value for `ask`)
# -----------------------------------------------------------------
instlib =  avoids the warning(?)
ask = refers to each individual update
checkBuilt=T    turns a package into `old` if compiled under older R version
# -----------------------------------------------------------------
```{r update_old, eval=F}
update.packages(ask = F,    ## TRUE means asks for each pkg
                oldPkgs = old.packages(),         # ONLY these packages updated
                instlib = .libPaths()[[1]],       # avoids WARNING that R_HOME not writable
                checkBuilt=T)
```

Step #2
```{r upgrade, eval=F}
{
begin  <- Sys.time()
    update.packages(ask = FALSE ,  instlib= .libPaths()[[1]], checkBuild=TRUE)
    end  <- Sys.time()
    diff  <- end - begin
    diff
}
```
***

-----------------------------------------------------

***
###  ENV variables
***
*  See: https://stat.ethz.ch/R-manual/R-devel/library/base/html/EnvVar.html
```{r, collapse=TRUE}
(r_home <-R.home(component="home")) # [1] /opt/R/4.3.1/lib/R
Sys.getenv("R_HOME") 			# /usr/lib/R ; where R installed
Sys.getenv("R_LIBS_USER") # # [1] "/home/jim/R/x86_64-pc-linux-gnu-library/4.3"
Sys.getenv("R_HIST_SIZE") # [1] ""
Sys.getenv("R_BROWSER")  # [1] "xdg-open"
# ---------------------------------------------
length(Sys.getenv()) # 132

# too lengthy
if  (FALSE) Sys.getenv()		
```

# ---------------------------------------------
### Check Package Versions
# ---------------------------------------------
```{r}
packageVersion("rmarkdown") # 3.5.1
packageVersion("MASS")      # 7.3.60
packageVersion("class")      # 7.3.22:
R.version.string     # [1] "R version 4.3.0 (2023-04-21)"
```

# ---------------------------------------------
### Check Dependncies  
TODO:   utils::depends(pkg =  c(), dependencies=c ())    
# ---------------------------------------------

```{r, eval=F}
# For each installed pkg, find its dependencies
#### return list of character vectors, ~15,293 
	
l <- tools::package_dependencies(
							"tibble",
							db=installed.packages(),
							reverse=TRUE	)
l

# And "tibble" is dependenat upon:
l <- tools::package_dependencies("tibble", reverse=FALSE)
str(l) # named list, 1 elemnt named tibble,  a chr[12]
l

t  <- tibble(pkg=l$tibble)
t
##### 010-for <pkg>, find packages dependent upon it
```


# ---------------------------------------------
### Remove Package
# ---------------------------------------------
```{r}
if (FALSE) remove.packages("cellranger")
```


# ---------------------------------------------
### LEGACY
# ---------------------------------------------
### Loads,  but does not attach; TRUE if able to load.
```{r, eval=F}
check_suggests <- function(package) {
  if (!requireNamespace(package, quietly = TRUE)) {
    #stop("Suggested package '{package}' not present.")
    stop("Not found")
  }
}
check_suggests("tibble")
check_suggests("joke")
check_suggests("glue")
check_suggests("ggplot2")
```


# ----  003 view all installed R packages? ----
# at cmd line  which needed?
# apt-get cache search "^r-*" | sort


#### 4-.libPaths(), list all paths, purpose, name
```{r}
.libPaths()
# fix:

# t_libPaths <- tibble(.libPaths()) %>% 
#   mutate(
#   purpose =  c("added packages", 
#                ".Library.site", 
#                ".Library.site", 
#                "base R pkgs"),  
# 
#   quantity  = c("many", "Empty", "Empty", "many")  ,
#   env_var = c("R_LIBS_USER","","","R_LIBS?"),
#   aka = c("",".Library.site", ".Library.site", ".Library.site, .Library"))
# 
# t_libPaths

## Each path in .libPaths(), list installed packages

.Library
if (FALSE)
  .Library
  lapply(.libPaths(), list.dirs, recursive=FALSE)


getOption("repos")  # cran.rstudio.com
```

# -----------------------------jennyBC ------------------------------------------------------------------
##### 013_jennyBC
####  from https://github.com/smithjd/explore-libraries/blob/master/01_explore-libraries_jenny.R
```{r}

ipt <- installed.packages() %>%
  as_tibble()

dim(ipt) # [1] 186  16

installed_pkgs  <- ipt %>% select("Package")

print(installed_pkgs, n=200)

ipt %>% glimpse()

####' 014_Exploring the packages

####   * tabulate by LibPath, Priority, or both
#### base: 14, recommended:15, my library:165
ipt %>%
  count(LibPath, Priority)

####   * what proportion need compilation?
####   2nd line produces 3 rows x 2 (NeedCompliation n)
ipt %>%
  count(NeedsCompilation) %>%
  mutate(prop = n / sum(n))

#### 015_remove pkg
# uninstall()  vs remove.packages() ??
#### Find (and remove) package BH (it is gone!)
ipt %>% filter(Package=="BH") 

# uninstall(BH)
```


