<!--
  NO LONGER NEED yaml header,  see _quarto.yml
-->
** 603_   Working updates R packages **
** DO NOT DELETE **

### PURPOSE:    HELPER:  using dt to update  packages, to uderstand logic, SEE DT TOY example.
<!-- {{{ -->
Outline:  

    -   Check R version, sessionInfo
    -   Check current R library locations, 
    -   Review packages each library
    -   Identify packages in more than ONE directory
    -   (interactive only) update `old` packages (compiled with older R versions)
    -   (interactive only) update any remaining packages
    -   list Env variables
    
Functions:  

    -   update
    -   upgrade
    -   installed.packages
    -   find.package
    -   knitr functions:  <https://cran.r-project.org/web//packages/knitr/knitr.pdf>
<!-- }}} -->

### currently installed pkgs , 266 (with dup)
  ```{r}
<!-- {{{ -->
library(data.table)
dt = as.data.table(installed.packages())
head(dt)[1:3,1:3 ]
dim(dt) # [1] 264  16
```
<!-- }}} -->




REF: https://medium.com/analytics-vidhya/r-data-table-joins-48f00b46ce29
Notation:
  on=.(x,y)
  on=.(x < 5, y> y)  non-equi join
  on=.(...), z := ...   adds column (in reference, no copy)
### candidates
```{r}
cand = as.data.table(old.packages(checkBuilt=T))
cand
```

### candidate in 1, update
```{r}
lib1 = .libPaths()[[1]]
lib2 = .libPaths()[[2]]
lib1
lib2
cand[LibPath == .libPaths()[[1]], ]
update.packages(
                libinst = lib1,
                ask = FALSE,
                oldPkgs = as.matrix(cand[LibPath == lib1, ]),
                )

```


```{r}
# if cand is in lib1, not need to check if 2 (SEE TOY)
# but if cand in 2, only need to check if was every installed in 1
cand
cand[LibPath == lib2, ][!dt[LibPath == lib1, ], on=.(Package)]
x = cand[LibPath == lib2, ][!dt[LibPath == lib1, ], on=.(Package)]

update.packages(instlib = lib1,
                ask = FALSE,
                oldPkgs = as.matrix(x)
                )
```

