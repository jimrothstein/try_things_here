---
editor_options: 
  chunk_output_type: console
---

PURPOSE:   Scratch area.   Goal is to annotate 70_ and hoist
#
#  0430_tidyr_firefox_bookmarks_WORKS.R
##  Compare to base::rapply
##  TODO
##  2023-06-05
##  -     add remarks to x1, x2, x3, (length of each list)
##  -     possible to dput?  writeLines(???)
##  -     


```{r}
library(tibble)
library(jsonlite)
library(dplyr)
library(listviewer)
library(tidyr)
```   

```{r}
the_dir = "~/code/try_things_here/rrapply/bookmarks"
the_file <- paste0(the_dir, "/", "bookmarks-2023-05-24_FF.json")
the_dir
the_file

##  no attempt to simplify; x is list of lists
x <- jsonlite::read_json(the_file)
```
# ----------------------------------------------------------------------------------------

### One approach:   dput, str
### This approach is brute force, step by step into list.
### PROBLEM: dput
### Very helpful for seeing the structure, but easily becomes mess.
### tools like str and dput  easily recurse and for very large files can tie up machine.
```{r}
#   x is list of lenth 10, 9 are singletons, the 10th is list   
listviewer::jsonedit(x)     ## list(guid, title, ... children=list(...))
## 
dput(x[1:9])
# first 9, As a list:
# list(guid = "root________", title = "", index = 0L, dateAdded = 1684955179130000, 
#     lastModified = 1684985711947000, id = 1L, typeCode = 2L, 
#     type = "text/x-moz-place-container", root = "placesRoot")
#   
#   But 10th, is list of lists and recurses!
if (F) # x$children
length(x$children)
str(x$children, max.depth=1, list.len=4)


# ----------------------------------------------------------------------------------------
menu = x$children[[1]]
toolbar = x$children[[2]]
unfiled = x$children[[3]]
mobile = x$children[[4]]

length(menu)
str(menu)
str(menu, max.depth=1, list.len=5)
str(menu, max.depth=2, list.len=10)
# ------ CAUTION:   ----------------------------------------------------------------------------------
dput(menu[1:9])
##  

if (F) dput(x$children[1:9])
## but this recurses

if (F) dput(x[[10]])
listviewer::jsonedit(x$children) ## list of 4 ( list(..), list(..), list(..), list(..))
```



# ----------------------------------- SKIP-------------------------------------
## BRUTE FORCE, skip
```{r}

names(x1) <- "first"
x2 <- x1$first %>% tibble()
# # A tibble: 4 × 1
#   .                
#   <list>           
# 1 <named list [10]>
# 2 <named list [10]>
# 3 <named list [10]>
# 4 <named list [10]>
#
length(x2)   # 1 column
##  1st row of x2    
x2[[1]][[1]]
names(x2[[1]][[1]])   # children is list of list
str(x2[[1]][[1]], max.depth=1, list.len=9)   # stop just before children
# ----------------------------------- END SKIP-------------------------------------
#
# --------------------------------  MUCH BETTER ----------------------------------
# ------------------------------------------------------------------
###  Much better is capture lists in the very top list
###  And use various tools  (tidyr, hoist etc  and NOT with lists)
# ------------------------------------------------------------------
```{r}
x1 <- x$children %>% tibble()
##  4 x 1 tibble, each cell: named list of 10 ellements
x1
#   .                
#   <list>           
# 1 <named list [10]>
# 2 <named list [10]>
# 3 <named list [10]>
# 4 <named list [10]>

##  each of 4 chlidren holds another list of 10 
str(x1, max.depth=1, list.len=4)

```
```{r}
x2 <- x1 %>% hoist(".", # pull out from list-column
    title = "title",
##  id = "id",
    children = "children"
)
x2
# # A tibble: 4 × 3
#   <chr>   <list>         <list>
#   title   children       .
# 1 menu    <list [87]>    <named list [8]>
# 2 toolbar <list [14]>    <named list [8]>
# 3 unfiled <list [1,196]> <named list [8]>
# 4 mobile  <list [212]>   <named list [8]>

## remarks- no suprise
length(x2$children) # [1] 4
length(x2$children[[1]]) # [1] 87

x3 <- x2 %>% unnest_longer("children")
x3 |> head(n=4L)

## remarks no surprise
length(x3$children) # [1] 1509
names(x3)
unique(x3$title)

x4 <- x3 %>% hoist("children",
    uri = "uri",
    title1 = "title"
)

head(x4)
tail(x4)


x4 %>% dplyr::select(c("title", "uri", "title1")) |> head(4)
# # A tibble: 4 × 3
#   title uri                                                  title1       
#   <chr> <chr>                                                <chr>        
# 1 menu  <NA>                                                 Mozilla Fire…
# 2 menu  https://github.com/jarun/Buku                        jarun/buku: …
# 3 menu  https://github.com/r-lib/remotes                     r-lib/remote…
# 4 menu  https://usethis.r-lib.org/articles/pr-functions.html pr github! r…

x4 %>% select(c("title1")) |> nrow() # [1] 1509

x4 %>% select(c("title1")) |> head(4)
# # A tibble: 4 × 1
#   title1                                                                  
#   <chr>                                                                   
# 1 Mozilla Firefox                                                         
# 2 jarun/buku: |  bookmark manager                                         
# 3 r-lib/remotes: Install R packages from GitHub, GitLab, Bitbucket, git, …
# 4 pr github! r helpers                                                    
```
